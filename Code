

#define echoPin 2 // attach pin D2 Arduino to pin Echo of HC-SR04
#define trigPin 3 //attach pin D3 Arduino to pin Trig of HC-SR04

// defines variables
long duration; // variable for the duration of sound wave travel
int distance; // variable for the distance measurement
int bridgeHeight;
int carHeight;
int maxDist;
int buzzer = 9;
int GREEN = 7;
int YELLOW = 5;
int RED = 4;
int sensor=11;
int sensor2=8;
int i=0;
int soundVal=0;
int soundVal2=0;

int timer=0;

void setup() {
  pinMode(LED_BUILTIN, OUTPUT);
  pinMode(sensor, INPUT);
  pinMode(sensor2, INPUT);
  pinMode(trigPin, OUTPUT); // Sets the trigPin as an OUTPUT
  pinMode(echoPin, INPUT); // Sets the echoPin as an INPUT
  Serial.begin(9600); // // Serial Communication is starting with 9600 of baudrate speed
  bridgeHeight=22;
  pinMode(buzzer, OUTPUT);
  pinMode(RED, OUTPUT); //Traffic light #1 red
  pinMode(YELLOW, OUTPUT); //Traffic light #1 yellow
  pinMode(GREEN, OUTPUT); //Traffic light #1 green
  pinMode(A0, OUTPUT); //Traffic light #2 red
  pinMode(A1, OUTPUT); //Traffic light #2 YELLOW
  pinMode(A2, OUTPUT); //Traffic light #2 green

  
}
void loop() {
  // Clears the trigPin condition
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  // Sets the trigPin HIGH (ACTIVE) for 10 microseconds
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);
  // Reads the echoPin, returns the sound wave travel time in microseconds
  duration = pulseIn(echoPin, HIGH);
  // Calculating the distance
  distance = duration * 0.034 / 2; // Speed of sound wave divided by 2 (go and back)
  if(distance > 29){  //checking if the vehicle passed, reseting to measure new car
    maxDist=0;
  }
  carHeight= 31 - distance ;
    if(maxDist<carHeight){  // finding the maximum vehicle height
      maxDist=carHeight;
    }
  
    Serial.print("Distance: ");
    Serial.println(distance);
    Serial.print("MaxDistance: ");
    Serial.println(maxDist);
    Serial.print("carHeightin: ");
    Serial.println(carHeight);
    
    soundVal = digitalRead(sensor);
    Serial.println("soundVal1: ");  
    Serial.println(soundVal);
    delay(100);
    soundVal2 = digitalRead(sensor2);
    Serial.println("soundVal2: ");  
    Serial.println(soundVal2);
    if(timer>0){ //checking if the timer for traffic light priority is on(means emergency vehicle approaching)
       timer=timer-2;
  }
  else if (soundVal2 == HIGH){
    digitalWrite(A0, LOW);
    digitalWrite(A1, LOW);
    digitalWrite(A2, HIGH);
    digitalWrite(RED, HIGH);
    digitalWrite(GREEN, LOW);
    digitalWrite(YELLOW, LOW);
    timer=10;
  }
  else if(soundVal==HIGH) {
    digitalWrite(A0, HIGH);
    digitalWrite(A1, LOW);
    digitalWrite(A2, LOW);
    digitalWrite(RED, LOW);
    digitalWrite(GREEN, HIGH);
    digitalWrite(YELLOW, LOW);
    timer=10;
  }
    
  else{    // regular traffic light (Without priority)
    if(i%4==0){  
      digitalWrite(GREEN, LOW);
      digitalWrite(YELLOW, LOW);
      digitalWrite(RED, HIGH);
      digitalWrite(A0, LOW);
      digitalWrite(A1, LOW);
      digitalWrite(A2, HIGH);
    }
    else if(i%4==1){
      digitalWrite(RED, HIGH);
      digitalWrite(YELLOW, HIGH);
      digitalWrite(GREEN, LOW);
      digitalWrite(A0, LOW);
      digitalWrite(A1, HIGH);
      digitalWrite(A2, LOW);
    }
    else if(i%4==2){
      digitalWrite(GREEN, HIGH);
      digitalWrite(YELLOW, LOW);
      digitalWrite(RED, LOW);
      digitalWrite(A0, HIGH);
      digitalWrite(A1, LOW);
      digitalWrite(A2, LOW);
    }
     else if(i%4==3){
      digitalWrite(GREEN, LOW);
      digitalWrite(YELLOW, HIGH);
      digitalWrite(RED, LOW);
      digitalWrite(A0, HIGH);
      digitalWrite(A1, HIGH);
      digitalWrite(A2, LOW);
     }
     i++;
  }
  

  if (maxDist >= bridgeHeight){ //checking if the max vehicle height is over limit
     //buzzer!!
     tone(buzzer, 1000); // Send 1KHz sound signal...
     Serial.println("WARNING!!");
     for(int i=0; i<5; i++){
       digitalWrite(LED_BUILTIN, HIGH);
       delay(300);
       digitalWrite(LED_BUILTIN, LOW);    // turn the LED off by making the voltage LOW
       delay(300); 
     }
     noTone(buzzer);     // Stop sound...
  }
  delay(2000);
  


}
